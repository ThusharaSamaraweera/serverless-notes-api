# NOTE: update this with your service name
service: serverless-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
   notesTableName: notes

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  create:
    # Defines an HTTP API endpoint that calls the main function in create.js
    # - path: url path is /notes
    # - method: POST request
    handler: createNotes.main
    events:
      - http:
          path: notes
          cors: true
          method: post

  getNote:
    # Defines an HTTP API endpoint that calls the main function in getNote.js
    # - path: url path is /notes/{id}
    # - method: GET request
    handler: functions/notes/getNote.main
    events:
      - http:
          path: notes/{id}
          cors: true
          method: get

  getAllNotes:
    # Defines an HTTP API endpoint that calls the main function in getAllNotes.js
    # - path: url path is /notes
    # - method: GET request
    handler: functions/notes/getAllNotes.main
    events:
      - http:
          path: notes/{userId}
          cors: true
          method: get

  updateNote:
    # Defines an HTTP API endpoint that calls the main function in updateNote.js
    # - path: url path is /notes/{id}
    # - method: PUT request
    handler: functions/notes/updateNote.main
    events:
      - http:
          path: notes/{id}
          cors: true
          method: put